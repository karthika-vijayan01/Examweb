**********************************PROGRAM.CS**********************
using System;
using System.Collections.Generic;
using System.Data.SqlClient;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace BookStore
{
    internal class Program
    {
        static void Main(string[] args)
        {
           
                Library library = new Library();
                bool exit = false;

                while (!exit)
                {
                    Console.WriteLine("\n\t***** WELCOME TO LIBRARY *****");
                    Console.WriteLine("\n1. Add a new book");
                    Console.WriteLine("2. Display all books");
                    Console.WriteLine("3. Search for a book by ISBN");
                    Console.WriteLine("4. Display total number of books");
                    Console.WriteLine("5. Exit");
                    Console.Write("\nEnter your choice: ");

                    string choice = Console.ReadLine();
                    switch (choice)
                    {
                        case "1":
                            Console.Write("\nEnter Title: ");
                            string title = Console.ReadLine();

                            Console.Write("\nEnter Author: ");
                            string author = Console.ReadLine();

                            Console.Write("\nEnter Publication Year: ");
                            int publication_year = int.Parse(Console.ReadLine());

                            Console.Write("\nEnter ISBN: ");
                            int isbn = int.Parse(Console.ReadLine());

                            Console.Write("\nEnter Number of Pages: ");
                            int numberOfPages = int.Parse(Console.ReadLine());

                            Books newBook = new Books(title, author, publication_year, isbn, numberOfPages);
                            library.AddNewBook(newBook);
                            break;

                        case "2":
                            library.DisplayAllBooks();
                            break;

                        case "3":
                            Console.Write("Enter ISBN to search: ");
                            int searchIsbn = int.Parse(Console.ReadLine());
                            Books foundBook = library.SearchBookByISBN(searchIsbn);
                            if (foundBook != null)
                            {
                                foundBook.PrintDetails();
                            }
                            break;

                        case "4":
                             Books.DisplayTotalBooks();
                             break;

                        case "5":
                            exit = true;
                            Console.WriteLine("Exiting...");
                            break;

                        default:
                            Console.WriteLine("Invalid choice. Please try again.");
                            break;
                    }
                }
            }
        }

    }

********************************************APP CONFIGURE*************
<?xml version="1.0" encoding="utf-8" ?>
<configuration>
	<startup>
		<supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.8" />
	</startup>
	<connectionStrings>
		<add name="MyConnectionStrings" connectionString="data source = LAPTOP-PHHSIL6K\SQLEXPRESS; database =EMPLOYEE; integrated security = SSPI;"/>	
	</connectionStrings>
</configuration>
***************************LibraryCs***************************
using static BookStore.Library;
using System.Collections.Generic;
using System.Data.SqlClient;
using System;
using System.Configuration;

namespace BookStore
{


    public class Library : ILibrary
    {
        private List<Books>books = new List<Books>();

        private string conString = ConfigurationManager.ConnectionStrings["MyConnectionStrings"].ConnectionString;

        // Add new book to the list and database
        public void AddNewBook(Books book)
        {
            // Add book to the local list
            //books.Add(book);

            // Insert the book into the database
            using (SqlConnection connection = new SqlConnection(conString))
            {
                string query = "INSERT INTO books (Title, Author, publication_year, isbn, NumberOfPages) VALUES (@Title, @Author, @publication_year, @isbn, @NumberOfPages)";

                using (SqlCommand cmd = new SqlCommand(query, connection))
                {
                    cmd.Parameters.AddWithValue("@Title", book.Title);
                    cmd.Parameters.AddWithValue("@Author", book.Author);
                    cmd.Parameters.AddWithValue("@publication_year", book.publication_year);
                    cmd.Parameters.AddWithValue("@isbn", book.isbn);
                    cmd.Parameters.AddWithValue("@NumberOfPages", book.NumberOfPages);

                    try
                    {
                        connection.Open();
                        cmd.ExecuteNonQuery();
                        Console.WriteLine("Book added to the database successfully.");
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine("Error: " + ex.Message+ex);
                    }
                }
            }
        }

       
        public void DisplayAllBooks()
        {
            using (SqlConnection connection = new SqlConnection(conString))
            {
                string query = "SELECT * FROM books";

                using (SqlCommand cmd = new SqlCommand(query, connection))
                {
                    try
                    {
                        connection.Open();
                        SqlDataReader reader = cmd.ExecuteReader();

                        if (reader.HasRows)
                        {
                            Console.WriteLine("\nAll Books in Library:");
                            Console.WriteLine("---------------------------------------------------------------------------------");
                            Console.WriteLine("| {0,-20} | {1,-20} | {2,-5} | {3,-13} | {4,-6} |", "Title", "Author", "Year", "ISBN", "Pages");
                            Console.WriteLine("---------------------------------------------------------------------------------");

                            while (reader.Read())
                            {
                                Console.WriteLine("| {0,-20} | {1,-20} | {2,-5} | {3,-13} | {4,-6} |",
                                    reader["Title"], reader["Author"], reader["publication_year"], reader["ISBN"], reader["NumberOfPages"]);
                                
                            }
                            Console.WriteLine("---------------------------------------------------------------------------------");
                        }
                        else
                        {
                            Console.WriteLine("No books found.");
                        }
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine("Error: " + ex.Message);
                    }
                }
            }
        }




        // Search for a book by ISBN
        public Books SearchBookByISBN(int isbn)
        {
            using (SqlConnection connection = new SqlConnection(conString))
            {
                string query = "SELECT * FROM books WHERE isbn = @isbn";

                using (SqlCommand cmd = new SqlCommand(query, connection))
                {
                    cmd.Parameters.AddWithValue("@ISBN", isbn);

                    try
                    {
                        connection.Open();
                        SqlDataReader reader = cmd.ExecuteReader();

                        if (reader.HasRows && reader.Read())
                        {
                            // Create a book object from the database data
                            Books foundBook = new Books(
                                reader["Title"].ToString(),
                                reader["Author"].ToString(),
                                int.Parse(reader["publication_year"].ToString()),
                                int.Parse(reader["isbn"].ToString()),
                                int.Parse(reader["NumberOfPages"].ToString())
                            );
                            return foundBook;
                        }
                        else
                        {
                            Console.WriteLine("Book not found.");
                            return null;
                        }
                    }
                    catch (Exception ex)
                    {
                        Console.WriteLine("Error: " + ex.Message);
                        return null;
                    }
                }
            }
        }

       private static string connectionString = "Server=YOUR_SERVER_NAME;Database = EMPLOYEE;Trusted_Connection=True;";

        // Method to display the total number of books
        public static void DisplayTotalBooks()
        {
            int totalBooks = 0;

            using (SqlConnection connection = new SqlConnection(connectionString))
            {
                try
                {
                    connection.Open(); // Open the connection before executing the query

                    string query = "SELECT COUNT(*) FROM book";  // Ensure the table name is correct

                    using (SqlCommand command = new SqlCommand(query, connection))
                    {
                        totalBooks = (int)command.ExecuteScalar();  // Retrieves the count result
                    }

                    Console.WriteLine($"Total number of books: {totalBooks}");
                }
                catch (SqlException ex)
                {
                    Console.WriteLine($"An error occurred: {ex.Message}");
                }
            }
        }
    }
    
}


******************************librarycs*****************************
using System.Collections.Generic;


namespace BookStore
{
   
public interface ILibrary
    {
        void DisplayAllBooks();
        Books SearchBookByISBN(int isbn);
        void AddNewBook(Books book);
    }


}
**********************BOOKS.cs***********************************
using System;
namespace BookStore
{


    public class Books
    {

        public string Title { get; set; }
        public string Author { get; set; }
        public int publication_year { get; set; }
        public int isbn { get; set; }
        public int NumberOfPages { get; set; }


        private static int totalBooks = 0;


        public Books(string title, string author, int publication_year, int isbn, int numberOfPages)
        {
            Title = title;
            Author = author;
            publication_year = publication_year;
            isbn = isbn;
            NumberOfPages = numberOfPages;
            totalBooks++;
        }


        public void ChangePublicationYear(int newYear)
        {
            publication_year = newYear;
        }


        public void ChangeAuthorName(string newAuthor)
        {
            Author = newAuthor;
        }


        public static void DisplayTotalBooks()
        {
            Console.WriteLine($"Total number of books: {totalBooks}");
        }

        public void PrintDetails()
        {
            Console.WriteLine($"Title: {Title}, Author: {Author}, Publication Year: {publication_year}, isbn: {isbn}, Pages: {NumberOfPages}");
        }
    }
}

*************************SQL**********************************
CREATE TABLE books (
    id INT PRIMARY KEY IDENTITY,
    Title VARCHAR(30) NOT NULL,
    Author VARCHAR(30) NOT NULL,
    publication_year INT NOT NULL,
    isbn VARCHAR(30) UNIQUE NOT NULL,
    NumberOfPages INT NOT NULL
);
INSERT INTO  books(Title,Author,publication_year,isbn,NumberOfPages)VALUES('Aadujeevitham','Benyabin',1947,948547,845),
('Uduppante Kinar','Sadik',1945,90007,840),
('Vazhakkula','Chengapuzha',1921,10000,545);

select * from books
truncate table books
drop table books

SELECT COUNT(*) FROM books

